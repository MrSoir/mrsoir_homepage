import React, { Component } from 'react';
import { withRouter } from "react-router-dom";
import {readTextFile} from '../StaticFunctions';
import meta_info from './info.txt';
import './Gosh.css';

class Gosh extends Component{
	constructor(){
		super();
		
		this.state = {
			data: []
		}
	}
	componentWillMount() {
		let txt = readTextFile(meta_info);
		
		let info_lines = txt.split('\n').filter((tn)=>!!tn);
		// first line in info_lines gives the number of images to render for Ballin'GL
		let imgCount   = parseInt(info_lines[0].split(' ').filter(s=>!!s).slice(-1)[0]);
		
   	let data   = [];
   	let f = (fileBaseName)=>{
   		let img_path       = process.env.PUBLIC_URL + '/Gosh/pics/' + fileBaseName + '.png';
   		let info_text_path = process.env.PUBLIC_URL + '/Gosh/'      + fileBaseName + '.txt';
   		let info_text = this.parseData( readTextFile(info_text_path) );
   		return {
   			name: fileBaseName,
   			img_path: img_path,
   			heading: info_text.heading,
   			text: info_text.text
   		};
   	};
   	for(let i=0; i < imgCount; ++i){
   		data.push( f('Gosh' + i) );
   	}
   	for (let i=0; i < data.length; ++i){
   		console.log('data ' + i + ': ', data[i]);
   	}

   	let newstate = this.state;
   	newstate.data = data;
   	this.setState(newstate);
   }
   parseData(txt){
   	let paragraphs = txt.split('\n').filter(s=>!!s);
   	let heading = paragraphs[0];
   	paragraphs = paragraphs.splice(1);
		let composedTxt = '';
		for (let i=0; i < paragraphs.length; ++i){
			composedTxt += paragraphs[i];
			if (i < paragraphs.length -1){
				composedTxt += '<br/>';
			}
		}
		return {
			heading: heading,
			text: composedTxt
		};
   }
	render(){
		return (
		<ul className="PreviewList">
			{this.state.data.map((da, id)=>
				<Preview key={id} 
							name={da.name}
							image_path={da.img_path}
							heading={da.heading}
							text={da.text}
							separator={id < this.state.data.length-1}
				/>
			)}
		</ul>
		);
	}
}

class Preview extends Component{
	constructor(){
		super();
		
		this.onClick = this.onClick.bind(this);
	}
	onClick(){
		let name = this.props.name;
		console.log(name);
	}
	
	render(){
		let sep = this.props.separator ? <div className="MainSeparator"></div> : '';
		return (
			<li className="PreviewListItem">
				<div className="PreviewContainer">
					<img 	src={this.props.image_path} 
							alt="logo"
							className="PreviewImage"
							onClick={this.onClick} />
					<div className="PreviewText">
						<u className="Cursor" 
							onClick={this.loadPath}>
							{this.props.heading}
						</u>
						: {this.props.text}
					</div>
				</div>
				{sep}
			</li>
		);
	}
}

export default withRouter(Gosh);
